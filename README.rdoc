== README

This README would normally document whatever steps are necessary to get the
application up and running.

Things you may want to cover:

* Ruby version
    - ruby 2.0.0p353 (2013-11-22 revision 43784) [x86_64-darwin12.5.0]
  
* Gem files
    - gem 'yummly'
    - gem 'json'
    - gem 'httparty'
    - gem 'bootstrap-sass'
    - gem 'bcrypt-ruby'
    - gem 'protected_attributes'
    - gem 'rails_12factor'
    - gem 'rails_serve_static_assets'
    
    - gem 'pry-rails'
    - gem 'pry-debugger'
    - gem 'pry-stack_explorer'
    - gem 'pry'
    - gem 'better_errors'
    - gem 'annotate'
  
* System dependencies
    
    Rails 4.0.3
    postgres 9.3.3.0 (21)

* Database creation and configuration
    
    postgresql
    
        production:
        adapter: postgresql
        encoding: unicode
        database: justlike_app_development
        pool: 5
        password:


* Database schema
    create_table "cuisines", force: true do |t|
        t.string   "name"
        t.string   "description"
        t.datetime "created_at"
        t.datetime "updated_at"

    create_table "cuisines_recipes", id: false, force: true do |t|
        t.integer "cuisine_id"
        t.integer "recipe_id"
  
    create_table "ingredients", force: true do |t|
        t.string   "name"
        t.string   "description"
        t.string   "measurement"
        t.string   "cost"
        t.text     "image"
        t.datetime "created_at"
        t.datetime "updated_at"
  

    create_table "ingredients_recipes", id: false, force: true do |t|
        t.integer "ingredient_id"
        t.integer "recipe_id"

    create_table "recipes", force: true do |t|
        t.string   "name"
        t.string   "description"
        t.integer  "cooktime"
        t.integer  "servingsize"
        t.text     "instruction"
        t.text     "image"
        t.integer  "user_id"
        t.integer  "cuisine_id"
        t.datetime "created_at"
        t.datetime "updated_at"
        t.string   "yummly_id"
        t.integer  "rating"

    create_table "recipes_users", id: false, force: true do |t|
        t.integer "recipe_id"
        t.integer "user_id"

    create_table "users", force: true do |t|
        t.string   "name"
        t.string   "address_1"
        t.string   "address_2"
        t.string   "city"
        t.string   "postcode"
        t.string   "country"
        t.string   "email"
        t.text     "image"
        t.datetime "created_at"
        t.datetime "updated_at"
        t.string   "password_digest"


* Project plan

1.Install and Setup
  *Build basic rails app 
  *Connect to database
Setup migration for 4 base tables
Setup migration for 3 relational tables
Test relational tables and base tables for data
Setup controllers (Recipes, Ingredients, Users, Cuisines)
Setup routes
Open website to test rails server can start.

Setup CRUD for
Recipes
Cuisines
Ingredients
Users
Test all CRUD is working for these with sample data.
Error checking and validation

Test Basic Functionality and website flow
Draw up website flow diagram
Test all basic functionality works
Setup ‘pages’ route to manage basic pages.
Setup Home page, FAQ, Blog, About, Login, Intro, Trending
Test all routing works to different pages
Error checking and validation

Initial push to Github

Research API for recipes & how others did it.
Yummly – signup to developer site
Look through requirements and pre-reqs
Check no issues with local OSX  or Heroku or AWS
Find gems, applicable code and setup and test
Need to Install controllers for the API? (no – added to recipes controller)
Setup API within the recipes controller
Test API can produce data
Setup the results page (views > recipes > search.html.erb)
Test search function >> producing data
Clean up search page to show basic recipe and image
Save search to local database as a favourite.
Error checking and validation

Initial push to Heroku

How the recipe search will work
Setup additional column in the recipe table to have yummly_id
Setup search to save recipe to database
Setup link between tables from the search and the current db tables
	link recipe > with recipe and save and edit
	link ingredients > with ingredients and save and edit


* Services (job queues, cache servers, search engines, etc.)

* Deployment instructions

* ...


Please feel free to use a different markup language if you do not plan to run
<tt>rake doc:app</tt>.
